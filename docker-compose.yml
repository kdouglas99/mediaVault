services:
  postgres:
    image: postgres:15-alpine
    container_name: media-vault-db
    platform: linux/amd64
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: media-vault-backend
    platform: linux/amd64
    restart: unless-stopped
    ports:
      - "${PORT}:${PORT}"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PORT=${PORT}
      - NODE_ENV=${NODE_ENV}
      - UPLOAD_RATE_LIMIT_MAX=${UPLOAD_RATE_LIMIT_MAX}
      - UPLOAD_RATE_LIMIT_WINDOW_MS=${UPLOAD_RATE_LIMIT_WINDOW_MS}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - upload_data:/app/uploads

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: media-vault-frontend
    platform: linux/amd64
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://10.21.16.43:3001
    depends_on:
      - backend

volumes:
  postgres_data:
    driver: local
  upload_data:
    driver: local

networks:
  default:
    name: media-vault-network